{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Form.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Form","guardarBusqueda","obtenerDatosReceta","e","target","name","useContext","onSubmit","preventDefault","type","placeholder","onChange","map","key","strCategory","ModalContext","ModalProvider","idreceta","guardarIdReceta","inforeceta","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","informacion","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.079e8971.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"bg-alert\">\r\n            <h1>Busca Recetas de bebidas</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n//Crear context\r\nexport const CategoriasContext = createContext();\r\n\r\n//Provider es donde se encuentra las funciones y el state\r\nconst CategoriasProvider = (props) => {\r\n    //crear el state del context\r\n    //const [hola, guardarHola] = useState('hola');\r\n    const [categorias, guardarCategorias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const obtenerCategorias = async () => {\r\n            const url = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n            const categorias = await axios(url);\r\n            guardarCategorias(categorias.data.drinks);\r\n        }\r\n        obtenerCategorias();\r\n    }, [])\r\n\r\n    return (\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CategoriasProvider;","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n    const [recetas, guardarRecetas] = useState([]);\r\n    const [busqueda, buscarRecetas] = useState({\r\n        nombre: '',\r\n        categoria: ''\r\n    })\r\n    const [consultar, guardarConsultar] = useState(false);\r\n\r\n    const { nombre, categoria } = busqueda;\r\n\r\n    useEffect(() => {\r\n        if(consultar) {\r\n            const obtenerRecetas = async () => {\r\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\r\n                const resultado = await axios(url);\r\n                //console.log(resultado);\r\n                guardarRecetas(resultado.data.drinks)\r\n            }\r\n            obtenerRecetas();\r\n        }\r\n    },[busqueda]);\r\n    return (\r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                guardarConsultar\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RecetasProvider;","import React, {useContext, useState} from 'react';\r\nimport { CategoriasContext } from '../context/CategoriasContext';\r\nimport { RecetasContext } from '../context/RecetasContext';\r\n\r\nconst Form = () => {\r\n    const [busqueda, guardarBusqueda] = useState({\r\n        nombre: '',\r\n        categoria: ''\r\n    })\r\n    //funcion para leer los contenidos\r\n    const obtenerDatosReceta = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const { categorias } = useContext(CategoriasContext);\r\n    const { buscarRecetas, guardarConsultar } = useContext(RecetasContext);\r\n    return (\r\n            <form className=\"col-12\"\r\n                onSubmit={e => { \r\n                    e.preventDefault(); \r\n                    buscarRecetas(busqueda)\r\n                    guardarConsultar(true)\r\n                }}\r\n            >\r\n                <fieldset className=\"text-center\">\r\n                    <legend>Busca bebidas por categoria o ingrediente</legend>\r\n                </fieldset>\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-md-4\">\r\n                        <input\r\n                            name=\"nombre\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Buscar por ingrediente\"\r\n                            onChange={obtenerDatosReceta}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"categoria\"\r\n                            onChange={obtenerDatosReceta}\r\n                        >\r\n                            <option value=\"\">-- Selecciona una categoria --</option>\r\n                            {categorias.map(categoria => (\r\n                                <option key={categoria.strCategory} value={categoria.strCategory}>{categoria.strCategory}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            className=\"btn btn-block btn-primary\"\r\n                            value=\"Buscar bebidas\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React, { useEffect, useState, createContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const ModalContext = createContext();\r\n\r\n\r\nconst ModalProvider = (props) => {\r\n    \r\n    //state del provider\r\n    const [ idreceta, guardarIdReceta ] = useState(null);\r\n    const [ inforeceta , guardarReceta] = useState({});\r\n\r\n    //una vez que tienes la receta llamar la api\r\n    useEffect(() => {\r\n        const obtenerReceta = async () => {\r\n            if(!idreceta) return;\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n            const resultado = await axios(url);\r\n            guardarReceta(resultado.data.drinks[0]);\r\n        }\r\n        obtenerReceta();\r\n    }, [idreceta])\r\n    return (\r\n        <ModalContext.Provider\r\n            value={{\r\n                inforeceta,\r\n                guardarIdReceta,\r\n                guardarReceta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalProvider;","import React, { useContext, useState } from 'react';\r\nimport { ModalContext } from '../context/ModalContext';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Receta = ({ receta }) => {\r\n\r\n\r\n    //Configuracion del estilo de material-ui\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    //extraer los valores del context\r\n    const { inforeceta,guardarIdReceta, guardarReceta } = useContext(ModalContext);\r\n\r\n    //muestra y formatea ingredientes\r\n    const mostrarIngredientes = informacion => {\r\n        let ingredientes = [];\r\n        for(let i = 1; i < 16; i ++) {\r\n            if( informacion[`strIngredient${i}`] ) {\r\n                ingredientes.push(\r\n                    <li>{informacion[`strIngredient${i}`]} {informacion[`strMeasure${i}`]}</li>\r\n                )\r\n            }\r\n        }\r\n        return ingredientes;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n                <img className=\"card-img-top\" src={receta.strDrinkThumb} alt={receta.strDrink}/>\r\n\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={() => {\r\n                            guardarIdReceta(receta.idDrink)\r\n                            handleOpen();\r\n                        }}\r\n                    >Ver Receta</button>\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={() => {\r\n                            guardarIdReceta(null);\r\n                            handleClose();\r\n                            guardarReceta({});\r\n                        }}\r\n                    >\r\n                        <div style={modalStyle} className={classes.paper}>\r\n                            <h2>{inforeceta.strDrink}</h2>\r\n                            <h3 className=\"mt-4\">Instrucciones</h3>\r\n                            <p>{inforeceta.strInstructions}</p>\r\n                            <img className=\"img-fluid my-4\" src={inforeceta.strDrinkThumb} />\r\n                            <h3>Ingredientes y cantidades</h3>\r\n                            <ul>\r\n                                { mostrarIngredientes(inforeceta) }\r\n                            </ul>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Receta;","import React, { useContext } from 'react';\r\nimport { RecetasContext } from '../context/RecetasContext';\r\nimport Receta from './Receta';\r\n\r\nconst ListaRecetas = () => {\r\n\r\n    //extraer las recetas\r\n    const { recetas } = useContext(RecetasContext);\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            {recetas.map(receta => (\r\n                <Receta \r\n                    key={receta.idDrink}\r\n                    receta={receta}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListaRecetas;","import React from 'react';\nimport Header from './components/Header'\nimport Form from './components/Form'\nimport CategoriasProvider from './context/CategoriasContext'\nimport RecetasProvider from './context/RecetasContext'\nimport ListaRecetas from './components/ListaRecetas';\nimport ModalProvider from './context/ModalContext'\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Form />\n            </div>\n            <ListaRecetas />\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}